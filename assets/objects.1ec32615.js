const c=s=>e=>Object.fromEntries(Object.entries(e).map(s)),i=s=>c(([e,t],r)=>[s(e,r),t]),O=s=>c(([e,t],r)=>[e,s(t,r)]),m=s=>s.split(/[\.\[\]\'\"]/).filter(e=>e),l=(s,e,t=void 0)=>Object.hasOwn(s,e)?s[e]:t,u=(s,e,t)=>s[e]=t,d=(s,e,t)=>{e=Array.isArray(e)?e:m(e);const r=(n,a,o)=>u(n,a,o<e.length-1?l(n,a,{}):t);return e.reduce(r,s)},f=i(s=>s.toLowerCase()),y=s=>e=>Object.fromEntries(e.map(t=>[t[s],t]));export{O as a,y as i,f as l,c as m,d as s};
